name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Setup Node.js environment
      uses: actions/setup-node@v3
      with:
        node-version: '16.13'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Install Yarn
      run: npm install -g yarn@latest
      
    - name: Install dependencies
      run: yarn install
      
    - name: Check Node.js version
      run: node --version
      
    - name: Run Tests
      run: |
        output=$(npm run test)
        if [[ "$output" != *"Fake test"* ]]; then
          echo "Error: Tests failed"
          exit 1
        fi
      working-directory: ./app

  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install AWS CLI
        run: sudo apt-get update && sudo apt-get install awscli

      - name: Configure AWS account
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ secrets.AWS_REGION }}

      - name: Authenticate with ECS
        run: |
          aws configure set default.region ${{ secrets.AWS_REGION }}
          aws ecs update-container-agent --cluster ${{ secrets.ECS_CLUSTER_NAME }}
          aws ecs update-container-agent --cluster ${{ secrets.ECS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

      - name: Build Docker Image
        run: |
          docker build -t app:latest .
        working-directory: ./app

      - name: Push to ECS
        run: |
          docker tag app:latest ${{ secrets.AWS_USER_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/jm-develops-test:latest
          docker push ${{ secrets.AWS_USER_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/jm-develops-test:latest
